{"ast":null,"code":"var _jsxFileName = \"D:\\\\React js\\\\useEffect project\\\\src\\\\components\\\\Context\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogIn: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogIn: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"KevDNrCXvtsbrnrIN4+rjR7PIn4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/React js/useEffect project/src/components/Context/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogIn","email","password","AuthContextProvider","props","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAGA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAG,KADuB;AAEpCC,EAAAA,QAAQ,EAAG,MAAI,CAAE,CAFmB;AAGpCC,EAAAA,OAAO,EAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB,CAAE;AAHI,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACN,UAAD,EAAYO,aAAZ,IAA6BV,QAAQ,CAAC,KAAD,CAA3C;;AAEA,QAAMW,aAAa,GAAG,MAAM;AACxBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACAH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAIA,QAAMI,YAAY,GAAG,MAAM;AACvBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAkC,GAAlC;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAI;AAACP,MAAAA,UAAU,EAACA,UAAZ;AAAuBC,MAAAA,QAAQ,EAACO,aAAhC;AAA8CN,MAAAA,OAAO,EAACS;AAAtD,KADT;AAAA,cAEKL,KAAK,CAACO;AAFX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjBM;;GAAMR,mB;;KAAAA,mB;AAmBb,eAAeP,WAAf","sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn : false ,\r\n    onLogout : ()=>{} , \r\n    onLogIn : (email,password) => {}\r\n})\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [isLoggedIn,setIsLoggedIn] = useState(false);\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem('isLoggedIn');\r\n        setIsLoggedIn(false);\r\n    }\r\n    const loginHandler = () => {\r\n        localStorage.setItem('isLoggedIn','1');\r\n        setIsLoggedIn(true);\r\n    }\r\n    return (\r\n        <AuthContext.Provider\r\n        value = {{isLoggedIn:isLoggedIn,onLogout:logoutHandler,onLogIn:loginHandler}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}