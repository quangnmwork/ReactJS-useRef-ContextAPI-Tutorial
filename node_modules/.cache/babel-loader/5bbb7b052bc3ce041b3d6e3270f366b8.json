{"ast":null,"code":"var _jsxFileName = \"D:\\\\React js\\\\useEffect project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    console.log(action.val);\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    console.log('state' + state.value);\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(() =>{\n  //   const identify = setTimeout(() => {\n  //     console.log('identify');\n  //     setFormIsValid(\n  //       emailState.isValid && enteredPassword.trim().length > 6\n  //     );\n  //   },500);\n  //   return () => {\n  //     console.log(\"CLEANUP\");\n  //     clearTimeout(identify);\n  //   };\n  // },[emailState.value,enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_IPUT',\n      val: event.target.value\n    }); // console.log(event.target.value.include('@') && enteredPassword.trim().length > 6)\n\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"qCfTQcvv2XXTWYZ7BaW6LgEnmGY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/React js/useEffect project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","console","log","val","value","isValid","includes","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","target","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state,action) => {\n  if(action.type === 'USER_INPUT'){\n    console.log(action.val);\n    return {value:action.val,isValid:action.val.includes(\"@\")};\n    \n  } \n  if(action.type === 'INPUT_BLUR'){\n    console.log('state'+state.value)\n    return {value:state.value,isValid:state.value.includes(\"@\")};\n  }\n  return {value:'',isValid:false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState,dispatchEmail] = useReducer(emailReducer,\n    {value:'',isValid:null}\n  )\n  // useEffect(() =>{\n  //   const identify = setTimeout(() => {\n  //     console.log('identify');\n  //     setFormIsValid(\n  //       emailState.isValid && enteredPassword.trim().length > 6\n  //     );\n  //   },500);\n  //   return () => {\n  //     console.log(\"CLEANUP\");\n  //     clearTimeout(identify);\n  //   };\n  // },[emailState.value,enteredPassword])\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type:'USER_IPUT',val:event.target.value});\n   // console.log(event.target.value.include('@') && enteredPassword.trim().length > 6)\n    setFormIsValid(\n      event.target.value.includes('@') && enteredPassword.trim().length > 6\n    );\n  };\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type:'INPUT_BLUR'})\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}